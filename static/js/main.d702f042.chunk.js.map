{"version":3,"sources":["components/component/Card.js","components/Profile.js","components/Career.js","components/Skill.js","components/Project.js","components/Presentation.js","components/Education.js","config.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","props","className","concat","react_default","a","createElement","children","Profile","_ref","_ref$profileImg","profileImg","undefined","_ref$githubAccountId","githubAccountId","_ref$email","email","_ref$phone","phone","_ref$description","description","_ref$github","github","component_Card","react","src","alt","index_esm","href","io_index_esm","Object","prototype","toString","call","renderItem","item","index","key","name","duration","Career","_ref$careers","careers","map","Skill","_ref$skills","skills","contribution","images","etc","Project","_ref$projects","projects","_useState","useState","_useState2","slicedToArray","fold","setFold","icon","iconDescription","onClick","Presentation","_ref$presentations","presentations","Education","_ref$educations","educations","config","profile","App","components_Profile","Array","isArray","components_Skill","components_Education","components_Career","components_Presentation","components_Project","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d702f042.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = props => {\r\n    const className = props.className ? `card ${props.className}` : 'card';\r\n    return (\r\n        <div className={className}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    className : PropTypes.string,\r\n    children : PropTypes.element,\r\n}\r\n\r\nexport default Card;","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { GoMarkGithub } from 'react-icons/go'\r\nimport { IoIosMail, IoIosPhonePortrait } from 'react-icons/io';\r\nimport { Card } from './component';\r\n\r\nconst Profile = ({profileImg = undefined, githubAccountId = '', email = undefined, phone = undefined, description = \"\", github = \"\"}) => {\r\n    return (\r\n        <Card className=\"profile\">\r\n            <Fragment>\r\n                <div className=\"banner\">\r\n                    <div className=\"image-container\">\r\n                        {\r\n                            profileImg ? <img src={profileImg} alt=\"프로필 사진\"/>\r\n                            : <GoMarkGithub/>\r\n                        }\r\n                        \r\n                    </div>\r\n                    <span className=\"nickname\">{githubAccountId}</span>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                    <div className=\"contact\">\r\n                        <ul>\r\n                            {github && <li><a href={`https://github.com/${githubAccountId}`}><GoMarkGithub />{github} </a></li>}\r\n                            {email && <li><IoIosMail />{email} </li>}\r\n                            {phone && <li><IoIosPhonePortrait /> {phone} </li>}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"description\">\r\n                    {Object.prototype.toString.call(description) === '[object String]' && description}\r\n                </div>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    profileImg: PropTypes.string,\r\n    githubAccountId: PropTypes.string,\r\n    email: PropTypes.string,\r\n    phone: PropTypes.string,\r\n    description: PropTypes.string,\r\n};\r\n\r\nexport default Profile;","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        <div className=\"language\">\r\n            <div>{item.name}</div> \r\n            <div>{item.duration}</div>\r\n        </div>\r\n        <div className=\"description\">{item.description}</div>\r\n    </li>\r\n)\r\n\r\nconst Career = ({careers = []}) => {\r\n    return (\r\n        <Card className=\"career\">\r\n            <Fragment>\r\n                <h2>Experience</h2>\r\n                <ul>\r\n                    {careers.map(renderItem) }\r\n                </ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nCareer.propTypes = {\r\n    careers: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Career;\r\n\r\n\r\n","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        {item}\r\n    </li>\r\n)\r\n\r\nconst Skill = ({skills = []}) => {\r\n    return(\r\n        <Card className=\"skill\">\r\n            <Fragment>\r\n                <h2>Skills</h2>\r\n                <ul>{skills.map(renderItem)}</ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nSkill.propTypes = {\r\n    skills: PropTypes.array\r\n}\r\n\r\nexport default Skill;","import React, {Fragment, useState} from 'react'\r\nimport { Card } from './component';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io'\r\n\r\nconst renderEtc = (etc) => (\r\n    <Fragment>\r\n        <h4 className=\"subtitle\">참고</h4>\r\n        <ul className=\"etc\">\r\n            {etc.map((item, index) => (<li key={index} ><a href={item}>{item}</a></li>))}\r\n        </ul>\r\n    </Fragment>\r\n)\r\n\r\nconst renderImg = (images) => (\r\n    <div className=\"image-container\">\r\n        {images.map((item, index) => (\r\n            <img key={index} src={item} alt=\"그림\" />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nconst renderItem = (item, index) => {\r\n    return (\r\n        <li key={index}>\r\n            <h3 className=\"title\">{item.name}</h3>\r\n            <div>진행 기간 : {item.duration} </div>\r\n            <h4 className=\"subtitle\">내용</h4>\r\n            <div className=\"description\">{item.description}</div>\r\n            <h4 className=\"subtitle\">기여</h4>\r\n            <div className=\"description\">{item.contribution}</div>\r\n            <h4 className=\"subtitle\">사용 스킬 혹은 지식</h4>\r\n            <ul className=\"skills\">\r\n                {item.skills.map((item, index) => (<li key={index}>{item}</li>))}\r\n            </ul>\r\n            {item.images && renderImg(item.images)}\r\n            {item.etc && renderEtc(item.etc)}\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Project = ({projects = []}) => {\r\n    const [fold, setFold] = useState(true);\r\n    let className = fold ? \"project fold\" : \"project\";\r\n    let icon = fold ? <IoIosArrowDown /> : <IoIosArrowUp />;\r\n    let iconDescription = fold ? \"펼치기\" : \"접기\";\r\n    return(\r\n        <Card className={className}>\r\n            <Fragment>\r\n                <header>\r\n                    <h2>Project</h2>\r\n                    <button onClick={() => setFold(!fold)}>{iconDescription}&nbsp;{icon}</button>\r\n                </header>\r\n                <ul>{projects.map(renderItem)}</ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Project;","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderEtc = (etc) => (\r\n    <Fragment>\r\n        <h4 className=\"subtitle\">참고</h4>\r\n        <ul className=\"etc\">\r\n            {etc.map((item, index) => (<li key={index} ><a href={item}>{item}</a></li>))}\r\n        </ul>\r\n    </Fragment>\r\n)\r\n\r\nconst renderImg = (images) => (\r\n    <div className=\"image-container\">\r\n        {images.map((item, index) => (\r\n            <img key={index} src={item} alt=\"그림\" />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        <h3 className=\"title\">{item.name}</h3>\r\n        <div>진행 기간 : {item.duration} </div>\r\n        <h4 className=\"subtitle\">내용</h4>\r\n        <div className=\"description\">{item.description}</div>\r\n        <h4 className=\"subtitle\">기여</h4>\r\n        <div className=\"description\">{item.contribution}</div>\r\n        <h4 className=\"subtitle\">사용 스킬 혹은 지식</h4>\r\n        <ul className=\"skills\">\r\n            {item.skills.map((item, index) => (<li key={index}>{item}</li>))}\r\n        </ul>\r\n        {item.images && renderImg(item.images)}\r\n        {item.etc && renderEtc(item.etc)}\r\n    </li>\r\n)\r\n\r\nconst Presentation = ({presentations = []}) => {\r\n    return(\r\n        <Card className=\"presentation\">\r\n            <Fragment>\r\n                <h2>Presentation</h2>\r\n                <ul>{presentations.map(renderItem)}</ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nPresentation.propTypes = {\r\n    presentations: PropTypes.array\r\n}\r\n\r\nexport default Presentation;","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from './component';\r\n\r\n\r\nconst renderItem = (item, index) => (\r\n    <li key={index}>\r\n        <div className=\"language\">\r\n            <div>{item.name}</div> \r\n            <div>{item.duration}</div>\r\n        </div>\r\n        <div className=\"description\">{item.description}</div>\r\n    </li>\r\n)\r\n\r\nconst Education = ({educations = []}) => {\r\n    return (\r\n        <Card className=\"education\">\r\n            <Fragment>\r\n                <h2>Education</h2>\r\n                <ul>\r\n                    {educations.map(renderItem) }\r\n                </ul>\r\n            </Fragment>\r\n        </Card>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    educations: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Education;\r\n","const config = {\r\n    profile: {\r\n        githubAccountId: \"Songseunghyo1\",\r\n        profileImg: \"https://avatars0.githubusercontent.com/u/15643765?s=460&v=4\",\r\n        email: \"tmdgy15@gmail.com\",\r\n        description: \"자바 백엔드 개발자를 꿈꾸는 주니어 개발자입니다.\",\r\n        github: \"https://github.com/Songseunghyo1\",\r\n    },\r\n    skills: [\r\n        \"JAVA\", \r\n        \"Spring Framework\", \r\n        \"Git\",\r\n    ],\r\n    careers: [\r\n        {\r\n            name: \"(주)iTeyes\",\r\n            duration: \"2019.03 ~\",\r\n            description: \"(주)iTeyes 프로세스자동화팀에서 주임으로 근무하고있습니다. 라이브러리를 활용한 데이터시각화와 자바 백엔드개발에 참여하고있습니다.\"\r\n        },\r\n        {\r\n            name: \"Jeju National Univ. System Software Lab\",\r\n            duration: \"2015.11 ~ 2019.02\",\r\n            description: \"시스템 소프트웨어 연구실에서 학부생 연구원으로 활동했습니다. 연구실 활동을하며 여러 오픈 마켓에 무형상품을 판매하는 판매자의 상품 판매정보 통합하여 한 눈에 파악할 수 있는 티켓솔루션 개발에 참여하였으며, 반려동물 혹은 가축을 대상으로 웨어러블 장비와 중계기(서버)를 통해 건강상태 및 활동량 등 헬스케어 환경을 구성하는 산학연 연계 프로젝트를 진행하였습니다.\"\r\n        }\r\n    ],\r\n    educations: [\r\n        {\r\n            name: \"KakaoTrack ScholarShip, Jeju National University\",\r\n            duration: \"2016.03 ~ 2018.11\",\r\n            description: \"2016년부터 2018까지 3년간 제주대학교와 카카오가 주관하는 Kakao트랙 교육을 이수하였습니다.\"\r\n        }\r\n    ],\r\n    presentations: [\r\n        {\r\n            name: \"교육봉사\",\r\n            duration: \"2016.06\",\r\n            description: \"학과 후배들과 함께 팀을 꾸려 전공동아리 활동을 하였습니다. 매주 1회 빈 강의실에 모여 아두이노를 활용하여 기초적인 실습일 진행한 뒤 도냐에 위치한 중학교와 고등학교에 방문하여 교육봉사를 진행하였습니다.\",\r\n            contribution: \"동아리의 장으로써 스터디할 주제를 선정하여  매주 한번 동아리원들과 함께 빈 강의실에 모여 아두이노와 센서를 이용해 스터디를 진행하였습니다.\",\r\n            images: [\"images/meetup/edu_volunteer.jpg\"],\r\n            skills: [\"Arduino\", \"기타 센서\"],\r\n        },\r\n        {\r\n            name: \"2016(STEAM)융합과학창작경진대회\",\r\n            duration: \"2016.08\",\r\n            description: \"전공동아리활동을 하며 동아리원들과 함께 지능형 냉장고를 제작하여 목원대학교에서 주최한 융합과학창작경진대회에 참가하였습니다.\\n장려상 수상\",\r\n            contribution: \"스티로폼 박스에 전압을 조절하기 위한 릴레이를 탑재, 220v의 전압을 아두이노의 전압에 맞추어 실제 냉장고의 작동방식과 유사하게 사용자로부터 온도설정, 문열림감지[냉장고 내부 점등, 특정 시간 이상 문열림상태 지속시 경고음 출력], 문열린 시간 감지 등을 체크하고 경고음을 발생하도록 제작하였습니다.\",\r\n            images: [],\r\n            skills: [\"Arduino\", \"Peltier device, 릴레이, 마그네틱센서, 온습도센서\"],\r\n        }\r\n    ],\r\n    projects: [\r\n        {\r\n            name: \"제주대학교 컴퓨터공학전공 코드 페스티벌\",\r\n            duration: \"2018.10.27 ~ 2018.11.26\",\r\n            description: `컴퓨터공학전공 학생들을 대상으로 한 알고리즘 웹 플랫폼입니다. 학생회로 있던 때 학생들의 학업 증진을 위해 직접 개발했습니다.`,\r\n            contribution: \"로그인처리 개발을 맡았습니다.\",\r\n            skills: [\"JAVA\", \"SpringSecurity\"],\r\n            images: [\"images/codefestival/codefestival.png\"],\r\n            etc: [\"https://github.com/JNU-CE-Code-Festival/Server\"],\r\n        },\r\n        {\r\n            name: \"제대로 통한다 관리자페이지\",\r\n            duration: \"2018.03 ~ 2018.06\",\r\n            description: `당시 대중교통 도착정보를 제공해주는 애플리케이션의 불편함을 느껴 '직접 개발하자!'라는 생각에 개발하게된 애플리케이션으로, 변동가능성이 높은 도착정보를 손쉽게 변경할 수 있는 관리자페이지를 개발하였습니다.  `,\r\n            contribution: \"관리자 페이지를 개발하는 역할을 맡았습니다.\",\r\n            skills: [\"JAVA\", \"SpringSecurity\", \"Thymeleaf\", \"HTML5/CSS3\"],\r\n            images: [\"images/management_page/management_page.png\"],\r\n            etc: [\"https://github.com/JNU-tong/JNU-tongManagementPage\"],\r\n        },\r\n        {\r\n            name: \"Bluetooth Router\",\r\n            duration: \"2017.09 ~ 2019.02\",\r\n            description: `블루투스 통신을 이용하여 가정에서 기르는 반려동물의 활동량 증가시키고  중계기와 반려동물의 목걸이간의 통신을 통해 활동량 체크하는 시스템을 개발하는 프로젝트에 참여하였습니다.`,\r\n            contribution: \"안드로이드 애플리케이션을 개발하는 역할을 맡았습니다.\",\r\n            skills: [\"JAVA\", \"Android\", \"Android BLE\", \"iBeacon\"],\r\n            images: ['images/beacon/beacon.png']\r\n        },\r\n        {\r\n            name: \"Ticket Solution\",\r\n            duration: \"2017.07 ~ 2018.06\",\r\n            description: `여러 오픈마켓에 무형상품을 판매하는 사용자의 편의를 위해 하나의 솔루션을 이용해 상품의 상태 확인(재고, 판매수량 사용처리 등)`,\r\n            contribution: \"Android/IOS 화면을 개발하는 역할을 맡았습니다.\",\r\n            skills: [\"ReactNative\", \"React Navigation\"],\r\n            images: ['images/ts/ts1.png']\r\n        },\r\n        {\r\n            name: \"Smart Pad\",\r\n            duration: \"2017.03 ~ 2019.02\",\r\n            description: `하드웨어 장비위에 반려동물이 앉을 경우 체온, 심탄도 등을 측정하여 서버에 저장, 사용자의 요청에따라 어떠한 요청인지 파싱하여 서버에 저장된 데이터 제공`,\r\n            contribution: \"소켓 통신을 이용해 데이터를 요청했을때 정상적인 Response가 오는지 확인하기 위해 Request를 보내는 프로그램을 개발하였습니다.\",\r\n            skills: [\"C\", \"TCP Socket\"],\r\n            images: []\r\n        },\r\n    ]\r\n}\r\n\r\nexport default config;\r\n","import React, { Fragment } from 'react';\r\nimport '../styles/App.css';\r\nimport { Profile, Career, Skill, Project, Presentation, Education } from '.';\r\nimport config from '../config.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <Profile \r\n        {...config.profile}\r\n      />\r\n      { config.skills && Array.isArray(config.skills) && <Skill skills={config.skills} />}\r\n      { config.educations && Array.isArray(config.educations) && <Education educations={config.educations} /> } \r\n      { config.careers && Array.isArray(config.careers) && <Career careers={config.careers} /> } \r\n      { config.presentations && Array.isArray(config.presentations) && <Presentation presentations={config.presentations} /> }\r\n      { config.projects && Array.isArray(config.projects) && <Project projects={config.projects} /> }\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport {App} from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('container'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}